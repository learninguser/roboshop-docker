version: "3.8"
services:
  mongodb:
    build:
      context: ./mongodb
      dockerfile: Dockerfile
    image: mongodb:v1
    container_name: mongodb
    networks:
      - roboshop
  catalogue:
    build:
      context: ./catalogue
      dockerfile: Dockerfile
    image: catalogue:v1
    container_name: catalogue
    depends_on:
      - mongodb
    networks:
      - roboshop
  redis:
    image: redis:6.2
    networks:
      - roboshop
    container_name: redis
  user:
    build:
      context: ./user
      dockerfile: Dockerfile
    image: user:v1
    container_name: user
    depends_on:
      - mongodb
      - redis
    networks:
      - roboshop
  cart:
    build:
      context: ./cart
      dockerfile: Dockerfile
    image: cart:v1
    container_name: cart
    depends_on:
      - catalogue
      - redis
    networks:
      - roboshop
  mysql:
    build:
      context: ./mysql
      dockerfile: Dockerfile
    image: mysql:v1
    container_name: mysql
    networks:
      - roboshop
  shipping:
    build:
      context: ./shipping
      dockerfile: Dockerfile
    image: shipping:v1
    container_name: shipping
    depends_on:
      - cart
      - mysql
    networks:
      - roboshop
  rabbitmq:
    image: rabbitmq
    container_name: rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=roboshop
      - RABBITMQ_DEFAULT_PASS=roboshop123
    networks:
      - roboshop
  payment:
    build:
      context: ./payment
      dockerfile: Dockerfile
    image: payment:v1
    container_name: payment
    depends_on:
      - cart
      - user
      - rabbitmq
    networks:
      - roboshop
  web:
    build:
      context: ./web
      dockerfile: Dockerfile
    image: web:v1
    container_name: web
    ports:
      - "80:80"
    depends_on:
      - catalogue
      - user
      - cart
      - shipping
      - payment
    networks:
      - roboshop
networks:
  roboshop:
    driver: bridge
